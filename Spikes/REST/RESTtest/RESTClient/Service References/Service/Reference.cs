//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RESTClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonModel", Namespace="http://schemas.datacontract.org/2004/07/RESTtest")]
    [System.SerializableAttribute()]
    public partial class PersonModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLData", ReplyAction="http://tempuri.org/IPersonService/XMLDataResponse")]
        string XMLData(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLData", ReplyAction="http://tempuri.org/IPersonService/XMLDataResponse")]
        System.Threading.Tasks.Task<string> XMLDataAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONData", ReplyAction="http://tempuri.org/IPersonService/JSONDataResponse")]
        string JSONData(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONData", ReplyAction="http://tempuri.org/IPersonService/JSONDataResponse")]
        System.Threading.Tasks.Task<string> JSONDataAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLPersonObject", ReplyAction="http://tempuri.org/IPersonService/XMLPersonObjectResponse")]
        string XMLPersonObject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLPersonObject", ReplyAction="http://tempuri.org/IPersonService/XMLPersonObjectResponse")]
        System.Threading.Tasks.Task<string> XMLPersonObjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONPersonObject", ReplyAction="http://tempuri.org/IPersonService/JSONPersonObjectResponse")]
        RESTClient.Service.PersonModel JSONPersonObject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONPersonObject", ReplyAction="http://tempuri.org/IPersonService/JSONPersonObjectResponse")]
        System.Threading.Tasks.Task<RESTClient.Service.PersonModel> JSONPersonObjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONPostObject", ReplyAction="http://tempuri.org/IPersonService/JSONPostObjectResponse")]
        RESTClient.Service.PersonModel JSONPostObject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/JSONPostObject", ReplyAction="http://tempuri.org/IPersonService/JSONPostObjectResponse")]
        System.Threading.Tasks.Task<RESTClient.Service.PersonModel> JSONPostObjectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLUpdatePerson", ReplyAction="http://tempuri.org/IPersonService/XMLUpdatePersonResponse")]
        string XMLUpdatePerson(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/XMLUpdatePerson", ReplyAction="http://tempuri.org/IPersonService/XMLUpdatePersonResponse")]
        System.Threading.Tasks.Task<string> XMLUpdatePersonAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : RESTClient.Service.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<RESTClient.Service.IPersonService>, RESTClient.Service.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string XMLData(string id) {
            return base.Channel.XMLData(id);
        }
        
        public System.Threading.Tasks.Task<string> XMLDataAsync(string id) {
            return base.Channel.XMLDataAsync(id);
        }
        
        public string JSONData(string id) {
            return base.Channel.JSONData(id);
        }
        
        public System.Threading.Tasks.Task<string> JSONDataAsync(string id) {
            return base.Channel.JSONDataAsync(id);
        }
        
        public string XMLPersonObject() {
            return base.Channel.XMLPersonObject();
        }
        
        public System.Threading.Tasks.Task<string> XMLPersonObjectAsync() {
            return base.Channel.XMLPersonObjectAsync();
        }
        
        public RESTClient.Service.PersonModel JSONPersonObject() {
            return base.Channel.JSONPersonObject();
        }
        
        public System.Threading.Tasks.Task<RESTClient.Service.PersonModel> JSONPersonObjectAsync() {
            return base.Channel.JSONPersonObjectAsync();
        }
        
        public RESTClient.Service.PersonModel JSONPostObject(string name) {
            return base.Channel.JSONPostObject(name);
        }
        
        public System.Threading.Tasks.Task<RESTClient.Service.PersonModel> JSONPostObjectAsync(string name) {
            return base.Channel.JSONPostObjectAsync(name);
        }
        
        public string XMLUpdatePerson(string name) {
            return base.Channel.XMLUpdatePerson(name);
        }
        
        public System.Threading.Tasks.Task<string> XMLUpdatePersonAsync(string name) {
            return base.Channel.XMLUpdatePersonAsync(name);
        }
    }
}
